@{
    ViewData["Title"] = "Teacher and Classes";
}
<h1>@ViewData["Title"]</h1>
<style>
    table {
        font-family: arial, sans-serif;
        border-collapse: collapse;
        width: 100%;
    }

    td,
    th {
        border: 1px solid #dddddd;
        text-align: left;
        padding: 8px;
    }

    tr:nth-child(even) {
        background-color: #dddddd;
    }

    .sortable-row {
        cursor: move;
    }

        .sortable-row:hover {
            background-color: aqua;
            color: #fff;
        }
</style>

<div class="table-responsive">
    <table class="table" id="table-1" cellspacing="0" cellpadding="2">
        <thead>
            <tr>
                <th>ID</th>
                <th>Number</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>
            <tr id="1" class="sortable-row" draggable="true">
                <td>1</td>
                <td>One</td>
                <td>some text</td>
            </tr>
            <tr id="2" class="sortable-row" draggable="true">
                <td>2</td>
                <td>Two</td>
                <td>some text</td>
            </tr>
            <!-- ... other rows ... -->
        </tbody>
    </table>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const tableBody = document.getElementById('table-1').querySelector('tbody');

        let dragSrcElement = null;

        function handleDragStart(e) {
            dragSrcElement = this;
            e.dataTransfer.effectAllowed = 'move';
            e.dataTransfer.setData('text/html', this.innerHTML);
        }

        function handleDragOver(e) {
            if (e.preventDefault) {
                e.preventDefault();
            }
            e.dataTransfer.dropEffect = 'move';
            return false;
        }

        function handleDragEnter() {
            this.classList.add('sortable-row-hover');
        }

        function handleDragLeave() {
            this.classList.remove('sortable-row-hover');
        }

        function handleDrop(e) {
            if (e.stopPropagation) {
                e.stopPropagation(); // stops the browser from redirecting.
            }

            if (dragSrcElement !== this) {
                dragSrcElement.innerHTML = this.innerHTML;
                this.innerHTML = e.dataTransfer.getData('text/html');
            }

            return false;
        }

        function handleDragEnd() {
            tableBody.querySelectorAll('.sortable-row').forEach(function (row) {
                row.classList.remove('sortable-row-hover');
            });
        }

        tableBody.querySelectorAll('.sortable-row').forEach(function (row) {
            row.addEventListener('dragstart', handleDragStart, false);
            row.addEventListener('dragenter', handleDragEnter, false);
            row.addEventListener('dragover', handleDragOver, false);
            row.addEventListener('dragleave', handleDragLeave, false);
            row.addEventListener('drop', handleDrop, false);
            row.addEventListener('dragend', handleDragEnd, false);
        });
    });
</script>


